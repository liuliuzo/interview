首先HashMap是线程不安全的，其主要体现：
1. jdk1.7中，在多线程环境下，扩容时会造成环形链或数据丢失。 
在对table进行扩容到newTable后，需要将原来数据转移到newTable中，注意10-12行代码，这里可以看出在转移元素的过程中，使用的是头插法，也就是链表的顺序会翻转，这里也是形成死循环的关键点。

2. jdk1.8中，在多线程环境下，会发生数据覆盖的情况。
在jdk1.8中对HashMap进行了优化，在发生hash碰撞，不再采用头插法方式，而是直接插入链表尾部，因此不会出现环形链表的情况，但是在多线程的情况下仍然不安全，